//Homework_lesson_24. Regular expressions. Continuation. Customer side data retention. Collections
"use strict";
// ================================================================
// ================================================================
// ---------------------------RegExp-------------------------------
// ================================================================
// ================================================================
// –ó–∞–¥–∞—á–∞  1. –î–∞–Ω–æ –º–∞—Å–∏–≤ —Ä—è–¥–∫–æ–≤–∏—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—å —á–∏—Å–µ–ª (—Ç–æ–±—Ç–æ –º–∞—Å–∏–≤ 
// —á–∏—Å–µ–ª —É –ª–∞–ø–∫–∞—Ö (string). –ó –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é 
// —Ä–µ–≥—É–ª—è—Ä–Ω–∏—Ö –≤–∏—Ä–∞–∑—ñ–≤ —ñ –≥—Ä—É–ø –ø—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–∏—Ö, —É —è–∫–∏—Ö 
// –ø–µ—Ä—à–∞ —ñ –æ—Å—Ç–∞–Ω–Ω—è –ª—ñ—Ç–µ—Ä–∏ –æ–¥–Ω–∞–∫–æ–≤—ñ.
// ================================================================
console.log('---------------------–ó–∞–¥–∞—á–∞ 1------------------------');

const numbers = ["123", "456", "789", "151", "252", "303"];
const pattern = /^(\d)\d*\1$/;
const count = numbers.filter(number => pattern.test(number)).length;
console.log(count);
// ================================================================
// –ó–∞–¥–∞—á–∞ 2. –ó–∞–º—ñ–Ω–∏—Ç–∏ –Ω–æ–º–µ—Ä —Ä–æ–∑–¥—ñ–ª—è—é—á–∏ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—ñ —Ü–∏—Ñ—Ä –¥–µ—Ñ—ñ—Å–æ–º 
// –∑–≥—ñ–¥–Ω–æ –∑ —Ñ–æ—Ä–º–∞—Ç–æ–º 0504546626   ü°™  +380-50-45-466-26
// ================================================================
console.log('---------------------–ó–∞–¥–∞—á–∞ 2------------------------');

const phoneNumber = "0504546626";
const formattedNumber = phoneNumber.replace(/^(\d)(\d{2})(\d{2})(\d{3})(\d{2})$/, "+38$1-$2-$3-$4-$5");
console.log(formattedNumber);
// ================================================================
// –ó–∞–¥–∞—á–∞ 3. –ü—ñ—Å–ª—è –∫–æ–∂–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è —Ä–æ–∫—É –ø—ñ—Å–ª—è 2000 —Ä–æ–∫—É –¥–æ–¥–∞—Ç–∏ ¬´—Ä.¬ª 
// ¬´–Ø –Ω–∞—Ä–æ–¥–∏–≤—Å—è 2001, –∞ –≤ —à–∫–æ–ª—ñ –ø—ñ—à–æ–≤ 2007¬ª ü°™ ¬´–Ø –Ω–∞—Ä–æ–¥–∏–≤—Å—è 2001—Ä., 
// –∞ –≤ —à–∫–æ–ª—ñ –ø—ñ—à–æ–≤ 2007—Ä.¬ª
// ================================================================
console.log('---------------------–ó–∞–¥–∞—á–∞ 3------------------------');

let str = "–Ø –Ω–∞—Ä–æ–¥–∏–≤—Å—è 2001, –∞ –≤ —à–∫–æ–ª—É –ø—ñ—à–æ–≤ —É 2007, 2999, 1999, 2000";
let result = str.replace(/(2\d{3})(?<!2000)/g, "$&—Ä.");
console.log(result);
// ================================================================
// –ó–∞–¥–∞—á–∞ 4. –í–≤–æ–¥–∏—Ç—å—Å—è –≤–µ–ª–∏–∫–µ —á–∏—Å–ª–æ. –ö–æ–∂–Ω—ñ 3 —Ä–æ–∑—Ä—è–¥–∏ –≤—ñ–¥–¥—ñ–ª—è—Ç–∏ 
// –ø—Ä–æ–±—ñ–ª–æ–º. 7457896524 ü°™ 7 457 896 524
// ================================================================
console.log('---------------------–ó–∞–¥–∞—á–∞ 4------------------------');

const number = "7457896524";
const formattedNumberTaskFour = number.replace(/\B(?=(\d{3})+(?!\d))/g, " ");
console.log(formattedNumberTaskFour);
// ================================================================
// ================================================================
// --------------------------Map.Set.------------------------------
// ================================================================
// ================================================================
// –ó–∞–¥–∞—á–∞ 5. –î–∞–Ω–æ —Å–ø–∏—Å–æ–∫ –∑ –≤—ñ–∫–æ–º —É—á–Ω—ñ–≤. –ü—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å–∫—ñ–ª—å–∫–∏ —Ä–∞–∑—ñ–≤ 
// –∫–æ–∂–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∑—É—Å—Ç—Ä—ñ—á–∞—î—Ç—å—Å—è —É —Å–ø–∏—Å–∫—É —ñ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–µ.
// ================================================================
console.log('---------------------–ó–∞–¥–∞—á–∞ 5------------------------');

const ages = [15, 17, 15, 16, 17, 18, 15, 17];

// –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≤—Ö–æ–¥–∂–µ–Ω—å –∫–æ–∂–Ω–æ–≥–æ –≤—ñ–∫—É
const countByAge = new Map();
ages.forEach((age) => {
	const count = countByAge.get(age) || 0;
	countByAge.set(age, count + 1);
});

// –í–∏–≤—ñ–¥ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≤—Ö–æ–¥–∂–µ–Ω—å –∫–æ–∂–Ω–æ–≥–æ –≤—ñ–∫—É
countByAge.forEach((count, age) => {
	console.log(`–í—ñ–∫ ${age} –∑—É—Å—Ç—Ä—ñ—á–∞—î—Ç—å—Å—è: ${count} —Ä–∞–∑—ñ–≤`);
});

// –ó–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è
const maxCount = Math.max(...countByAge.values());
console.log(`–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å: ${maxCount}`);
// ================================================================
// –ó–∞–¥–∞—á–∞ 6.  –î–∞–Ω–æ –º–∞—Å–∏–≤ –∫–Ω–∏–≥ (–Ω–∞–∑–≤–∞, —Ä—ñ–∫ –≤–∏–¥–∞–Ω–Ω—è, –∞–≤—Ç–æ—Ä). 
// –ü—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–Ω–∏–≥ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∞–≤—Ç–æ—Ä–∞.
// ================================================================
console.log('---------------------–ó–∞–¥–∞—á–∞ 6------------------------');

const books = [
	{ title: "Book 1", year: 2005, author: "Author 1" },
	{ title: "Book 2", year: 2008, author: "Author 2" },
	{ title: "Book 3", year: 2010, author: "Author 1" },
	{ title: "Book 4", year: 2012, author: "Author 3" },
	{ title: "Book 5", year: 2015, author: "Author 2" },
	{ title: "Book 6", year: 2018, author: "Author 1" },
];

const countByAuthor = new Map();
books.forEach(book => {
	const author = book.author;
	const count = countByAuthor.get(author) || 0;
	countByAuthor.set(author, count + 1);
});

countByAuthor.forEach((count, author) => {
	console.log(`–ê–≤—Ç–æ—Ä ${author} –º–∞—î: ${count} –∫–Ω–∏–≥(–∏)`);
});

// ================================================================
// –ó–∞–¥–∞—á–∞ 7. –î–∞–Ω–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤—ñ–¥–≤—ñ–¥—É–≤–∞—á—ñ–≤ –¥–µ—è–∫–æ–≥–æ —Å–∞–π—Ç—É (–¥–ª—è
// –∫–æ–∂–Ω–æ–≥–æ –≤—ñ–¥–≤—ñ–¥—É–≤–∞—á–∞ –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –ª–æ–≥—ñ–Ω). –ü—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ
// –∫–ª—ñ—î–Ω—Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω—å.
// ================================================================
console.log('---------------------–ó–∞–¥–∞—á–∞ 7------------------------');

const visits = [
	{ login: "user1" },
	{ login: "user2" },
	{ login: "user1" },
	{ login: "user3" },
	{ login: "user2" },
	{ login: "user1" },
	{ login: "user2" },
];

const visitCountByUser = new Map();
visits.forEach(visit => {
	const user = visit.login;
	const count = visitCountByUser.get(user) || 0;
	visitCountByUser.set(user, count + 1);
});

visitCountByUser.forEach((count, user) => {
	console.log(`–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${user} –≤—ñ–¥–≤—ñ–¥–∞–≤ —Å–∞–π—Ç: ${count} —Ä–∞–∑(–∏)`);
});
// ================================================================
// –ó–∞–¥–∞—á–∞ 8. –î–∞–Ω–æ –º–∞—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ (–ø—ñ–±, –∫—É—Ä—Å, —Ñ–∞–∫—É–ª—å—Ç–µ—Ç). 
// –ü—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—ñ–∑–Ω–∏—Ö —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—ñ–≤, —Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ 
// –∫–æ–∂–Ω–æ–≥–æ –∑ –∫—É—Ä—Å—ñ–≤. 
// ================================================================
console.log('---------------------–ó–∞–¥–∞—á–∞ 8------------------------');

const students = [
	{ name: "–°—Ç—É–¥–µ–Ω—Ç 1", course: 2, faculty: "–§–∞–∫—É–ª—å—Ç–µ—Ç 1" },
	{ name: "–°—Ç—É–¥–µ–Ω—Ç 2", course: 3, faculty: "–§–∞–∫—É–ª—å—Ç–µ—Ç 2" },
	{ name: "–°—Ç—É–¥–µ–Ω—Ç 3", course: 1, faculty: "–§–∞–∫—É–ª—å—Ç–µ—Ç 1" },
	{ name: "–°—Ç—É–¥–µ–Ω—Ç 4", course: 2, faculty: "–§–∞–∫—É–ª—å—Ç–µ—Ç 3" },
	{ name: "–°—Ç—É–¥–µ–Ω—Ç 5", course: 1, faculty: "–§–∞–∫—É–ª—å—Ç–µ—Ç 2" },
	{ name: "–°—Ç—É–¥–µ–Ω—Ç 6", course: 3, faculty: "–§–∞–∫—É–ª—å—Ç–µ—Ç 1" }
];

const facultyCount = new Set();
const courseCount = new Map();

students.forEach(student => {
	facultyCount.add(student.faculty);

	const course = student.course;
	const count = courseCount.get(course) || 0;
	courseCount.set(course, count + 1);
});

console.log(`–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—ñ–∑–Ω–∏—Ö —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—ñ–≤: ${facultyCount.size}`);

courseCount.forEach((count, course) => {
	console.log(`–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –Ω–∞ –∫—É—Ä—Å—ñ ${course}: ${count}`);
});
// ================================================================
// –ó–∞–¥–∞—á–∞ 9. –î–∞–Ω–æ –º–∞—Å–∏–≤ –ø–æ–∫–∞–∑—ñ–≤ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä. –ü—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å 
// –≤—Ö–æ–¥–∂–µ–Ω—å –∫–æ–∂–Ω–æ–≥–æ —ñ–∑ –ø–æ–∫–∞–∑—ñ–≤
// let temperatures = [12.4, 24.9, 10.6, 12.4, 24.9, 12.4, 10.6, 11.9]
// –ó–∞–æ–∫—Ä—É–≥–ª–∏—Ç–∏ –≤–≤–µ—Ä—Ö –∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∞ –ø—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—ñ–∑–Ω–∏—Ö –ø–æ–∫–∞–∑—ñ–≤.
// ================================================================
console.log('---------------------–ó–∞–¥–∞—á–∞ 9------------------------');

const temperatures = [12.4, 24.9, 10.6, 12.4, 24.9, 12.4, 10.6, 11.9];

// –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≤—Ö–æ–¥–∂–µ–Ω—å –∫–æ–∂–Ω–æ–≥–æ –ø–æ–∫–∞–∑—É —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏
const countByTemperature = new Map();
temperatures.forEach(temp => {
	const count = countByTemperature.get(temp) || 0;
	countByTemperature.set(temp, count + 1);
});

// –û–∫—Ä—É–≥–ª–µ–Ω–Ω—è –≤–≥–æ—Ä—É –∑–Ω–∞—á–µ–Ω—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä
const roundedTemperatures = temperatures.map(temp => Math.ceil(temp));

// –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä –ø—ñ—Å–ª—è –æ–∫—Ä—É–≥–ª–µ–Ω–Ω—è
const uniqueTemperatures = new Set(roundedTemperatures);
const uniqueTemperatureCount = uniqueTemperatures.size;

countByTemperature.forEach((count, temp) => {
	console.log(`–ü–æ–∫–∞–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏ ${temp} –∑—É—Å—Ç—Ä—ñ—á–∞—î—Ç—å—Å—è: ${count} —Ä–∞–∑—ñ–≤`);
});

console.log(`–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—ñ–∑–Ω–∏—Ö –ø–æ–∫–∞–∑—ñ–≤ –ø—ñ—Å–ª—è –æ–∫—Ä—É–≥–ª–µ–Ω–Ω—è: ${uniqueTemperatureCount}`);
// ================================================================
// –ó–∞–¥–∞—á–∞ 10. –î–∞–Ω–æ –¥–≤–∞ —Å–ø–∏—Å–∫–∏ –ø—Ä—ñ–∑–≤–∏—â —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤, —â–æ –≤—ñ–¥–≤—ñ–¥—É—é—Ç—å 
// –≥—É—Ä—Ç–∫–∏ –∑ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ —ñ —ñ—Å—Ç–æ—Ä—ñ—ó. –ü—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å–∫—ñ–ª—å–∫–∏ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –∑ 
// –≥—É—Ä—Ç–∫–∞ –∑ —ñ—Å—Ç–æ—Ä—ñ—ó —Ç–∞–∫–æ–∂ –≤—ñ–¥–≤—ñ–¥—É—é—Ç—å –≥—É—Ä—Ç–æ–∫ –∑ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏. –¢–∞–∫–æ–∂ 
// –ø—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å–∫—ñ–ª—å–∫–∏ –≤—Å—å–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –≤—ñ–¥–≤—ñ–¥—É—é—Ç—å —Ö–æ—á–∞ –± –æ–¥–∏–Ω –≥—É—Ä—Ç–æ–∫.
// ================================================================
console.log('---------------------–ó–∞–¥–∞—á–∞ 10------------------------');

const mathClubStudents = ["Smith", "Johnson", "Williams", "Jones"];
const historyClubStudents = ["Johnson", "Williams", "Brown", "Davis"];

// –°—Ç–≤–æ—Ä—é—î–º–æ –º–Ω–æ–∂–∏–Ω–∏ –∑—ñ —Å–ø–∏—Å–∫—ñ–≤ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤
const mathClubSet = new Set(mathClubStudents);
const historyClubSet = new Set(historyClubStudents);

// –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤, —è–∫—ñ –≤—ñ–¥–≤—ñ–¥—É—é—Ç—å –≥—É—Ä—Ç–æ–∫ –∑ —ñ—Å—Ç–æ—Ä—ñ—ó —Ç–∞ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏
let intersectionCount = 0;
for (const student of historyClubSet) {
	if (mathClubSet.has(student)) {
		intersectionCount++;
	}
}

console.log(`–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –∑ –≥—É—Ä—Ç–∫–∞ –∑ —ñ—Å—Ç–æ—Ä—ñ—ó, —è–∫—ñ —Ç–∞–∫–æ–∂ –≤—ñ–¥–≤—ñ–¥—É—é—Ç—å –≥—É—Ä—Ç–æ–∫ –∑ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏: ${intersectionCount}`);

// –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤, —è–∫—ñ –≤—ñ–¥–≤—ñ–¥—É—é—Ç—å —Ö–æ—á–∞ –± –æ–¥–∏–Ω –≥—É—Ä—Ç–æ–∫
const totalStudentsSet = new Set([...mathClubSet, ...historyClubSet]);

const totalStudentsCount = totalStudentsSet.size;

console.log(`–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤, —è–∫—ñ –≤—ñ–¥–≤—ñ–¥—É—é—Ç—å —Ö–æ—á–∞ –± –æ–¥–∏–Ω –≥—É—Ä—Ç–æ–∫: ${totalStudentsCount}`);
// ================================================================
// ================================================================
// ----------------LocalStorage.SessionStorage---------------------
// ================================================================
// ================================================================
// –ó–∞–¥–∞—á–∞ 11. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–æ–∂–µ –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –∫–æ–ª—ñ—Ä —Ñ–æ–Ω—É, —â–æ –≤–∏–±–∏—Ä–∞—î 
// –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º
/* <input type="color">. */
// –ó–±–µ—Ä—ñ–≥–∞—Ç–∏ —Ü–µ–π –∫–æ–ª—ñ—Ä —ñ –≤—ñ–¥–Ω–æ–≤–ª—é–≤–∞—Ç–∏ –ø—Ä–∏ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ. 
// –¢–∞–∫–æ–∂ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —ñ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–º—ñ–Ω –ø—Ä–æ—Ç—è–≥–æ–º –æ–¥–Ω–æ–≥–æ —Å–µ–∞–Ω—Å—É.
// ================================================================
class BackgroundColorManager {
	constructor(container) {
		this.container = container;
		this.colorInput = null;
		this.changeCount = 0;
		this.initialize();
	}

	initialize() {
		this.createColorTask();
		this.createCountTask();
		this.createDisplayTask();
		this.restoreColor();
		this.addEventListeners();
	}

	createColorTask() {
		const colorTaskDiv = document.createElement('div');
		colorTaskDiv.classList.add('task');
		this.container.appendChild(colorTaskDiv);

		const colorInputLabel = document.createElement('label');
		colorInputLabel.textContent = '–í–∏–±—ñ—Ä –∫–æ–ª—å–æ—Ä—É:';
		colorTaskDiv.appendChild(colorInputLabel);

		this.colorInput = document.createElement('input');
		this.colorInput.type = 'color';
		colorTaskDiv.appendChild(this.colorInput);
	}

	createCountTask() {
		const countTaskDiv = document.createElement('div');
		countTaskDiv.classList.add('task');
		this.container.appendChild(countTaskDiv);

		const countLabel = document.createElement('label');
		countLabel.textContent = '–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–º—ñ–Ω –∫–æ–ª—å–æ—Ä—É:';
		countTaskDiv.appendChild(countLabel);

		const changeCountDisplay = document.createElement('span');
		changeCountDisplay.id = 'changeCountDisplay';
		changeCountDisplay.classList.add('change-count');
		countTaskDiv.appendChild(changeCountDisplay);

		this.changeCountDisplay = changeCountDisplay;
	}

	createDisplayTask() {
		const displayTaskDiv = document.createElement('div');
		displayTaskDiv.classList.add('task');
		this.container.appendChild(displayTaskDiv);

		const displayLabel = document.createElement('label');
		displayLabel.textContent = '–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –∑–º—ñ–Ω–∏ –±–µ–∫–≥—Ä–∞—É–Ω–¥–∞:';
		displayTaskDiv.appendChild(displayLabel);

		this.displayDiv = document.createElement('div');
		this.displayDiv.classList.add('display-container');
		displayTaskDiv.appendChild(this.displayDiv);
	}

	restoreColor() {
		const savedColor = localStorage.getItem('backgroundColor');
		if (savedColor) this.displayDiv.style.backgroundColor = savedColor;
	}

	addEventListeners() {
		this.colorInput.addEventListener('change', () => this.changeBackgroundColor());
	}

	changeBackgroundColor() {
		const newColor = this.colorInput.value;
		this.displayDiv.style.backgroundColor = newColor;
		localStorage.setItem('backgroundColor', newColor);
		this.updateChangeCount();
	}

	updateChangeCount() {
		this.changeCount++;
		sessionStorage.setItem('changeCount', this.changeCount);
		this.displayChangeCount();
	}

	displayChangeCount() {
		this.changeCountDisplay.textContent = this.changeCount;
	}
}

const taskElevenContainer = document.getElementById('container-task-eleven');
const backgroundColorManager = new BackgroundColorManager(taskElevenContainer);
// ================================================================
// –ó–∞–¥–∞—á–∞ 12. –ó–±–µ—Ä—ñ–≥–∞—Ç–∏ —É –ø–∞–º‚Äô—è—Ç—ñ —Å–ø–∏—Å–æ–∫ —Å–ø—Ä–∞–≤, —è–∫—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É 
// —Ç—Ä–µ–±–∞ –≤–∏–∫–æ–Ω–∞—Ç–∏ (–∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —É localStorage). –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º 
// —á–∏–Ω–æ–º –≤–∏–±–∏—Ä–∞—Ç–∏ —è–∫—É—Å—å –∑ —Å–ø—Ä–∞–≤ —ñ –≤–∏–≤–æ–¥–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É 
// (–∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º confirm). –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–∫–∞—î –Ω–∞ ¬´–û–∫¬ª, 
// —Ç–æ –≤–∏–¥–∞–ª—è—Ç–∏ —Ü—é –∑–∞–¥–∞—á—É.
// ================================================================
function saveTodoList(todoList) {
	localStorage.setItem('todoList', JSON.stringify(todoList));
}

function getTodoList() {
	const storedList = localStorage.getItem('todoList');
	return storedList ? JSON.parse(storedList) : [];
}	

function showRandomTodo() {
	const storedList = getTodoList();

	if (storedList.length === 0) {
		clearInterval(intervalId);
		alert("–£ –≤–∞—Å –Ω–µ–º–∞—î –∂–æ–¥–Ω–∏—Ö —Å–ø—Ä–∞–≤!");
		return;
	}

	const randomIndex = Math.floor(Math.random() * storedList.length);
	const randomTodo = storedList[randomIndex];

	const confirmation = confirm(`–í–∞—à–∞ –Ω–∞—Å—Ç—É–ø–Ω–∞ —Å–ø—Ä–∞–≤–∞: "${randomTodo}". –í–∏ —Ö–æ—á–µ—Ç–µ —ó—ó –≤–∏–∫–æ–Ω–∞—Ç–∏?`);

	if (confirmation) {
		storedList.splice(randomIndex, 1);
		saveTodoList(storedList);
		alert("–°–ø—Ä–∞–≤–∞ –≤–∏–∫–æ–Ω–∞–Ω–∞!");
	}
}

// –ü–æ—á–∏–Ω–∞—î–º–æ –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–∏–π –≤–∏–≤—ñ–¥ –∑–∞–¥–∞—á
// const intervalId = setInterval(showRandomTodo, 5000);

// –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:

const initialTodoList = ["–°–ø—Ä–∞–≤–∞ 1", "–°–ø—Ä–∞–≤–∞ 2", "–°–ø—Ä–∞–≤–∞ 3"];

// –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å–ø–∏—Å–æ–∫ —Å–ø—Ä–∞–≤ –∑ localStorage, —è–∫—â–æ –≤—ñ–Ω —ñ—Å–Ω—É—î
// const storedList = getTodoList();

// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤ localStorage –≤–∂–µ —î —Å–ø–∏—Å–æ–∫ —Å–ø—Ä–∞–≤
if (storedList.length === 0) {
	// –Ø–∫—â–æ –≤ localStorage –Ω–µ–º–∞—î —Å–ø–∏—Å–∫—É —Å–ø—Ä–∞–≤, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Å–ø–∏—Å–æ–∫
	saveTodoList(initialTodoList);
} else {
	// –Ø–∫—â–æ –≤ localStorage —î —Å–ø–∏—Å–æ–∫ —Å–ø—Ä–∞–≤, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ
	alert(`–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —Å–ø–∏—Å–æ–∫ —Å–ø—Ä–∞–≤ –∑ localStorage: ${storedList}`);
}
